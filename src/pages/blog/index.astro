---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import ArrowCard from "@components/ArrowCard.astro";
import { BLOG } from "@consts";

const data = (await getCollection("blog"))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

type Acc = {
    [year: string]: {
        [month: string]: CollectionEntry<"blog">[];
    };
};

const posts = data.reduce((acc: Acc, post) => {
    const year = post.data.date.getFullYear().toString();
    // Store the actual month number for sorting purposes
    const monthNum = (post.data.date.getMonth() + 1)
        .toString()
        .padStart(2, "0");

    if (!acc[year]) {
        acc[year] = {};
    }

    if (!acc[year][monthNum]) {
        acc[year][monthNum] = [];
    }

    acc[year][monthNum].push(post);
    return acc;
}, {});

// Month name mapping
const monthNames = [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December",
];

const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a));
---

<PageLayout title={BLOG.TITLE} description={BLOG.DESCRIPTION}>
    <Container>
        <div class="space-y-8">
            <section class="animate space-y-4">
                <h5 class="font-semibold text-black dark:text-white">
                    Post Archives
                </h5>
                <article>
                    <p>
                        The content provided herein has been meticulously
                        organized in chronological order.
                    </p>
                </article>
            </section>

            <div class="space-y-10">
                {
                    years.map((year) => (
                        <section class="animate space-y-6">
                            <h5 class="font-semibold text-black dark:text-white">
                                {year}
                            </h5>
                            <div class="space-y-10">
                                {Object.keys(posts[year])
                                    .sort((a, b) => parseInt(b) - parseInt(a))
                                    .map((monthNum) => {
                                        const monthName =
                                            monthNames[parseInt(monthNum) - 1];
                                        return (
                                            <section class="animate space-y-6">
                                                <h5 class="font-semibold text-black dark:text-white">
                                                    {monthName}
                                                </h5>
                                                <ul class="flex flex-col gap-4">
                                                    {posts[year][monthNum].map(
                                                        (post) => (
                                                            <li>
                                                                <ArrowCard
                                                                    entry={post}
                                                                />
                                                            </li>
                                                        ),
                                                    )}
                                                </ul>
                                            </section>
                                        );
                                    })}
                            </div>
                        </section>
                    ))
                }
            </div>
        </div>
    </Container>
</PageLayout>
